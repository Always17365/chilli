<?xml version="1.0" ?>

<fsm name ="AvayaExtension" initial="init">
<datamodel>
	<data id="agentId" expr="''"/>
	<date id="connection"/>
	<date id="newCall"/>
	<date id="called"/>
	<data id="acdGroup" expr="'5000'"/>
	<data id="callUUID"/>
	<data id="timestamp"/>
	<data id="starttime"/>
	<data id="hangupdir" expr="0"/>
</datamodel>
<scriptmodel>
	<script src="./conf/cmpObject.js" />
	<script src="./conf/uuid.js" />
	<script src="./conf/DateFormat.js"/>
</scriptmodel>
	<state id="init">
		<onentry>
			<script>callUUID = ''; hangupdir=0;</script>
		</onentry>
		
		<event event="AgentLogin" cond="_event.AgentLogin.agentId != ''">
			<script>agentId = _event.AgentLogin.agentId;</script>	
		</event>
		
		<event event="AgentLogin">
			<send target="this" type="notify" dest="agent" eventexpr="_event._name">
				<event type="script">_event._name;</event>
				<extension type="script">_event.agentId;</extension>
				<AgentLogin type="script">_event.AgentLogin.cause = 1; _event.AgentLogin;</AgentLogin>
			</send>
		</event>
		
		<event event="AgentLogout" cond="agentId == _event.AgentLogout.agentId">
			<script>agentId = '';</script>
		</event>
		
		<event event="SQL">
			<log level="trace">execute sql result</log>
		</event>
		<event event="SERVICE_INITIATED">
			<script>connection = _event.serviceInitiated.connection;</script>
			<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
				<event type="script">_event._name;</event>
				<extension type="script">agentId;</extension>
				<serviceInitiated type="script">_event.serviceInitiated;</serviceInitiated>
			</send>
			<transition target="serviceInitiated"/>
		</event>
		<event event ="DELIVERED">
			<script>connection = _event.delivered.connection;</script>
			<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
				<event type="script">_event._name;</event>
				<extension type="script">agentId;</extension>
				<delivered type="script">_event.delivered;</delivered>
			</send>
			<transition target="Alerting"/>
		</event>
		<event event ="CONNECTION_CLEARED">
			<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
				<event type="script">_event._name;</event>
				<extension type="script">agentId;</extension>
				<connectionCleared type="script">_event.connectionCleared;</connectionCleared>
			</send>
			<send cond="cmp(_event.connectionCleared.connection,connection)" target="mysql" type="cmd" dest="mysql"  event="sql">
				<sql type="script">var sql='UPDATE call_cdr SET end_stamp=' + Date.parse(new Date())/1000+ ', hangup_cause=\'' + _event.connectionCleared.cause + '\',hangupdir=' + hangupdir +'  where id=\'' + callUUID + '\''; sql;</sql>
			</send>
			<script> hangupdir = 1;</script>
			<transition cond="cmp(_event.connectionCleared.connection,connection)" target="init"/>
		</event>
		<event event ="CALL_CLEARED">
			<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
				<event type="script">_event._name;</event>
				<extension type="script">agentId;</extension>
				<connectionCleared type="script">_event.callCleared;</connectionCleared>
			</send>
			<send cond="cmp(_event.callCleared.connection,connection)" target="mysql" type="cmd" dest="mysql"  event="sql">
				<sql type="script">var sql='UPDATE call_cdr SET end_stamp=' + Date.parse(new Date())/1000+ ', hangup_cause=\'' + _event.callCleared.cause + '\',hangupdir=' + hangupdir + ' where id=\'' + callUUID + '\''; sql;</sql>
			</send>
			<script> hangupdir = 1;</script>
			<transition cond="cmp(_event.callCleared.connection,connection)" target="init"/>
		</event>
		<state id="serviceInitiated">
			<event event="ORIGINATED">
				<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
					<event type="script">_event._name;</event>
					<extension type="script">agentId;</extension>
					<originated type="script">_event.originated;</originated>
				</send>
		
				<script>connection = _event.originated.connection; called = _event.originated.called;</script>
				<script>callUUID = uuid(); timestamp = new Date(); starttime = new Date();</script>
						
				<send target="mysql" type="cmd" dest="mysql"  event="sql">
					<sql type="script">var sql='INSERT INTO call_cdr'+
					'(id,                      callid,                      device,                  companyid,                    agentid,                  caller,                     called,              origcaller,                  origcalled,      start_stamp,           direction, createtime,              owner, cdrtype,  timestamp,            devicetype,  callid_stamp_str,                                 mediano) VALUES'+
					'(\'' + callUUID+'\',\''+ connection.callID +'\',\'' + _extension.Extension+ '\','+_extension.companyid + ',\'' + agentId + '\',\'' +_extension.Extension + '\',\'' + called +'\',\'' + _extension.Extension +'\',\'' + called + '\',' + Date.parse(starttime)/1000+ ',1,' +   Date.parse(new Date())/1000 + ',3,      0,' +  Date.parse(timestamp)/1000 + ',1,\'' +  timestamp.Format('yyyy-MM-dd HH:mm:ss') + '\',' + _stationNo+ ')';
					sql;</sql>
				</send>
				
				<send target="mysql" type="cmd" dest="mysql"  event="sql">
					<sql type="script">var sql='UPDATE call_cdr SET ringing_stamp=' + Date.parse(new Date())/1000+ ' where id=\'' + callUUID + '\''; sql;</sql>
				</send>
				
				<transition cond="cmp(_event.originated.connection,connection)" target="originated"/>
			</event>
			<event event ="FAILED">
				<script>callUUID = uuid(); timestamp = new Date(); starttime = new Date(); called = _event.failed.called;</script>
				<send target="mysql" type="cmd" dest="mysql"  event="sql">
					<sql type="script">var sql='INSERT INTO call_cdr'+
					'(id,                      callid,                      device,                  companyid,                    agentid,                  caller,                     called,              origcaller,                  origcalled,      start_stamp,           direction, createtime,              owner, cdrtype,  timestamp,            devicetype,  callid_stamp_str,                                 mediano) VALUES'+
					'(\'' + callUUID+'\',\''+ connection.callID +'\',\'' + _extension.Extension+ '\','+_extension.companyid + ',\'' + agentId + '\',\'' +_extension.Extension + '\',\'' + called +'\',\'' + _extension.Extension +'\',\'' + called + '\',' + Date.parse(starttime)/1000+ ',1,' +   Date.parse(new Date())/1000 + ',3,      0,' +  Date.parse(timestamp)/1000 + ',1,\'' +  timestamp.Format('yyyy-MM-dd HH:mm:ss') + '\',' + _stationNo+ ')';
					sql;</sql>
				</send>

				<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
					<event type="script">_event._name;</event>
					<extension type="script">agentId;</extension>
					<failed type="script">_event.failed;</failed>
				</send>
			</event>
			<state id="originated">
			
				<event event ="DELIVERED">
					<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
						<event type="script">_event._name;</event>
						<extension type="script">agentId;</extension>
						<delivered type="script">_event.delivered;</delivered>
					</send>
					<transition cond="_event.delivered.connection.callID == connection.callID" target="delivered"/>
				</event>
				<event event ="ESTABLISHED">
					<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
						<event type="script">_event._name;</event>
						<extension type="script">agentId;</extension>
						<established type="script">_event.established;</established>
					</send>
					<transition cond="_event.established.connection.callID == connection.callID" target="established"/>
				</event>
				<event event="FAILED">
					<script>hangupdir =1;</script>
				</event>
				<state id="delivered">
					
				</state>
			</state>
			
		</state>

		<state id ="Alerting">
			<event event ="ESTABLISHED">
				<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
					<event type="script">_event._name;</event>
					<extension type="script">agentId;</extension>
					<established type="script">_event.established;</established>
				</send>
				<transition cond="cmp(_event.established.connection,connection)" target="established"/>
			</event>
		</state>
		
		<state id="established">
			<onentry>				
				<send target="mysql" type="cmd" dest="mysql"  event="sql">
					<sql type="script">var sql='UPDATE call_cdr SET answer_stamp=' + Date.parse(new Date())/1000+ ' where id=\'' + callUUID + '\''; sql;</sql>
				</send>
			</onentry>
			
			<event event="HELD">
				<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
					<event type="script">_event._name;</event>
					<extension type="script">agentId;</extension>
					<held type="script">_event.held;</held>
				</send>
				<transition cond="cmp(_event.held.connection,connection)" target="held"/>
				<transition cond="_event.held.connection.callID == connection.callID" target="helded"/>
			</event>
			<state id="held">
				<event event="RETRIEVED">
					<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
						<event type="script">_event._name;</event>
						<extension type="script">agentId;</extension>
						<retrieved type="script">_event.retrieved;</retrieved>
					</send>
					<transition cond="cmp(_event.retrieved.connection,connection)" target="established"/>
				</event>
				<event event="HELD">
					<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
						<event type="script">_event._name;</event>
						<extension type="script">agentId;</extension>
						<held type="script">_event.held;</held>
					</send>
					<transition cond="_event.held.connection.callID == connection.callID" target="heldedAndheld"/>
				</event>
				<event event="SERVICE_INITIATED">
					<script>newCall = _event.serviceInitiated.connection;</script>
					<transition target="heldAndserviceInitiated"/>
				</event>
				<state id="heldAndserviceInitiated">
					<event event="FAILED">
						<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
							<event type="script">_event._name;</event>
							<extension type="script">agentId;</extension>
							<failed type="script">_event.failed;</failed>
						</send>
					</event>
					<event event="HELD" cond="cmp(_event.held.connection,newCall)">
					</event>
					<event event="ORIGINATED">
						<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
							<event type="script">_event._name;</event>
							<extension type="script">agentId;</extension>
							<originated type="script">_event.originated;</originated>
						</send>
						<transition cond="cmp(_event.originated.connection,newCall)" target="heldAndoriginated"/>
					</event>
					<state id="heldAndoriginated">
						<event event="DELIVERED">
							<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
								<event type="script">_event._name;</event>
								<extension type="script">agentId;</extension>
								<delivered type="script">_event.delivered;</delivered>
							</send>
							<transition cond="_event.delivered.connection.callID == newCall.callID" target="heldAnddelivered"/>
						</event>
						<event event="TRANSFERRED">
							<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
								<event type="script">_event._name;</event>
								<extension type="script">agentId;</extension>
								<transferred type="script">_event.transferred;</transferred>
							</send>
							<transition target="init"/>
						</event>
						<state id="heldAnddelivered">
							<event event="ESTABLISHED" cond="_event.established.connection.callID == newCall.callID">
								<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
									<event type="script">_event._name;</event>
									<extension type="script">agentId;</extension>
									<established type="script">_event.established;</established>
								</send>
								<transition target="heldAndestablished"/>
							</event>
							<state id="heldAndestablished">
								<event event="CONFERENCED">
									<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
										<event type="script">_event._name;</event>
										<extension type="script">agentId;</extension>
										<conferenced type="script">_event.conferenced;</conferenced>
									</send>
									<script>connection = _event.conferenced.secondaryOldCall;</script>
									<transition target="conferenced"/>
								</event>
								<state id="conferenced">
									
								</state>
							</state>
						</state>
					</state>
				</state>
			</state>
			<state id="helded">
				<event event="RETRIEVED">
					<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
						<event type="script">_event._name;</event>
						<extension type="script">agentId;</extension>
						<retrieved type="script">_event.retrieved;</retrieved>
					</send>
					<transition cond="_event.retrieved.connection.callID == connection.callID" target="established"/>
				</event>
				<event event="HELD">
					<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
						<event type="script">_event._name;</event>
						<extension type="script">agentId;</extension>
						<held type="script">_event.held;</held>
					</send>
					<transition cond="cmp(_event.held.connection,connection)" target="heldedAndheld"/>
				</event>
			</state>
			<state id="heldedAndheld">
				<event event="RETRIEVED">
					<send cond="agentId != ''" target="this" type="notify" dest="agent" eventexpr="_event._name">
						<event type="script">_event._name;</event>
						<extension type="script">agentId;</extension>
						<retrieved type="script">_event.retrieved;</retrieved>
					</send>
					<transition cond="cmp(_event.retrieved.connection,connection)" target="helded"/>
					<transition cond="_event.retrieved.connection.callID == connection.callID" target="held"/>
				</event>
			</state>
		</state>
		<!--event event="timer">
			<log level="debug" type="script">_event.id;</log>
			<send target="this" type="cmd" dest="this" event="MonitorStop">
				<monitorId type="script">monitorId</monitorId>
			</send>
		</event-->

    </state>
</fsm>

